/* 에러 : char형 문자를 변환할 때 char c =( c + 숫자 )형태는 안됨 (char)(c+숫자)는 가능 */

import java.io.*;
import java.math.*;
import java.security.*;
import java.text.*;
import java.util.*;
import java.util.concurrent.*;
import java.util.function.*;
import java.util.regex.*;
import java.util.stream.*;
import static java.util.stream.Collectors.joining;
import static java.util.stream.Collectors.toList;

class Result {

    /*
     * Complete the 'caesarCipher' function below.
     *
     * The function is expected to return a STRING.
     * The function accepts following parameters:
     *  1. STRING s
     *  2. INTEGER k
     */

    public static String caesarCipher(String s, int k) {
    // Write your code here
        String val="";
        int t=k;
        for (int i = 0; i < s.length(); i++) {
            t=k;
            char c;
            if((s.charAt(i)>=65)&&(s.charAt(i)<=90)){
                while(s.charAt(i)+t>90){
                    t-=26;
                }
                c=(char)(s.charAt(i)+t);
                val+=Character.toString(c);
            }else if((s.charAt(i)>=97)&&(s.charAt(i)<=122)){
                while(s.charAt(i)+t>122){
                    t-=26;
                }
                c=(char)(s.charAt(i)+t);
                val+=Character.toString(c);
            }else{
                val+=Character.toString(s.charAt(i));
            }
        }
        return val;
    }

}

public class Solution {
    public static void main(String[] args) throws IOException {
        BufferedReader bufferedReader = new BufferedReader(new InputStreamReader(System.in));
        BufferedWriter bufferedWriter = new BufferedWriter(new FileWriter(System.getenv("OUTPUT_PATH")));

        int n = Integer.parseInt(bufferedReader.readLine().trim());

        String s = bufferedReader.readLine();

        int k = Integer.parseInt(bufferedReader.readLine().trim());

        String result = Result.caesarCipher(s, k);

        bufferedWriter.write(result);
        bufferedWriter.newLine();

        bufferedReader.close();
        bufferedWriter.close();
    }
}
